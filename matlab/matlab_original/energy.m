function [gb,utot] = energy(ns,C,ib,u,pix,dk,b)
% Subroutine computes the total energy, utot, and the gradient, gb

    gb = zeros(ns, 3);

    %  Do global matrix multiply via small stiffness matrices, gb = A * u
    %  The long statement below correctly brings in all the terms from
    %  the global matrix A using only the small stiffness matrices.

    for j=1:3
        for n=1:3
            for m=1:ns
                gb(m,j)=gb(m,j)+u(ib(m,1),n)*( dk(pix(ib(m,27)),1,j,4,n)...
                +dk(pix(ib(m,7)),2,j,3,n)...
                +dk(pix(ib(m,25)),5,j,8,n)+dk(pix(ib(m,15)),6,j,7,n) )+...
                u(ib(m,2),n)*( dk(pix(ib(m,27)),1,j,3,n)...
                +dk(pix(ib(m,25)),5,j,7,n) )+...
                u(ib(m,3),n)*( dk(pix(ib(m,27)),1,j,2,n)+dk(pix(ib(m,5)),4,j,3,n)+...
                dk(pix(ib(m,13)),8,j,7,n)+dk(pix(ib(m,25)),5,j,6,n) )+...
                u(ib(m,4),n)*( dk(pix(ib(m,5)),4,j,2,n)...
                +dk(pix(ib(m,13)),8,j,6,n) )+...
                u(ib(m,5),n)*( dk(pix(ib(m,6)),3,j,2,n)+dk(pix(ib(m,5)),4,j,1,n)+...
                dk(pix(ib(m,14)),7,j,6,n)+dk(pix(ib(m,13)),8,j,5,n) )+...
                u(ib(m,6),n)*( dk(pix(ib(m,6)),3,j,1,n)...
                +dk(pix(ib(m,14)),7,j,5,n) )+...
                u(ib(m,7),n)*( dk(pix(ib(m,6)),3,j,4,n)+dk(pix(ib(m,7)),2,j,1,n)+...
                dk(pix(ib(m,14)),7,j,8,n)+dk(pix(ib(m,15)),6,j,5,n) )+...
                u(ib(m,8),n)*( dk(pix(ib(m,7)),2,j,4,n)...
                +dk(pix(ib(m,15)),6,j,8,n) )+...
                u(ib(m,9),n)*( dk(pix(ib(m,25)),5,j,4,n)...
                +dk(pix(ib(m,15)),6,j,3,n) )+...
                u(ib(m,10),n)*( dk(pix(ib(m,25)),5,j,3,n) )+...
                u(ib(m,11),n)*( dk(pix(ib(m,13)),8,j,3,n)...
                +dk(pix(ib(m,25)),5,j,2,n) )+...
                u(ib(m,12),n)*( dk(pix(ib(m,13)),8,j,2,n) )+...
                u(ib(m,13),n)*( dk(pix(ib(m,13)),8,j,1,n)...
                +dk(pix(ib(m,14)),7,j,2,n) )+...
                u(ib(m,14),n)*( dk(pix(ib(m,14)),7,j,1,n) )+...
                u(ib(m,15),n)*( dk(pix(ib(m,14)),7,j,4,n)...
                +dk(pix(ib(m,15)),6,j,1,n) )+...
                u(ib(m,16),n)*( dk(pix(ib(m,15)),6,j,4,n) )+...
                u(ib(m,17),n)*( dk(pix(ib(m,27)),1,j,8,n)...
                +dk(pix(ib(m,7)),2,j,7,n) )+...
                u(ib(m,18),n)*( dk(pix(ib(m,27)),1,j,7,n) )+...
                u(ib(m,19),n)*( dk(pix(ib(m,27)),1,j,6,n)...
                +dk(pix(ib(m,5)),4,j,7,n) )+...
                u(ib(m,20),n)*( dk(pix(ib(m,5)),4,j,6,n) )+...
                u(ib(m,21),n)*( dk(pix(ib(m,5)),4,j,5,n)...
                +dk(pix(ib(m,6)),3,j,6,n) )+...
                u(ib(m,22),n)*( dk(pix(ib(m,6)),3,j,5,n) )+...
                u(ib(m,23),n)*( dk(pix(ib(m,6)),3,j,8,n)...
                +dk(pix(ib(m,7)),2,j,5,n) )+...
                u(ib(m,24),n)*( dk(pix(ib(m,7)),2,j,8,n) )+...
                u(ib(m,25),n)*( dk(pix(ib(m,14)),7,j,3,n)...
                +dk(pix(ib(m,13)),8,j,4,n)+...
                dk(pix(ib(m,15)),6,j,2,n)+dk(pix(ib(m,25)),5,j,1,n) )+...
                u(ib(m,26),n)*( dk(pix(ib(m,6)),3,j,7,n)...
                +dk(pix(ib(m,5)),4,j,8,n)+...
                dk(pix(ib(m,27)),1,j,5,n)+dk(pix(ib(m,7)),2,j,6,n) )+...
                u(ib(m,27),n)*( dk(pix(ib(m,27)),1,j,1,n)...
                +dk(pix(ib(m,7)),2,j,2,n)+...
                dk(pix(ib(m,6)),3,j,3,n)+dk(pix(ib(m,5)),4,j,4,n)...
                +dk(pix(ib(m,25)),5,j,5,n)+...
                dk(pix(ib(m,15)),6,j,6,n)+dk(pix(ib(m,14)),7,j,7,n)+...
                dk(pix(ib(m,13)),8,j,8,n) );
            end
        end
    end

    utot=C;
    for m3=1:3
        for m=1:ns
            utot=utot+0.5*u(m,m3)*gb(m,m3)+b(m,m3)*u(m,m3);
            gb(m,m3)=gb(m,m3)+b(m,m3);
        end
    end

end

