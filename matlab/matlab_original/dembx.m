function [Ah, Lstep, h, u, gg] = dembx(ns, Lstep, gg, dk, gtest, ldemb, kkk, gb, ib, pix, u, h)
    %Subroutine that carries out the conjugate gradient relaxation process

    % Initialize the conjugate direction vector on first call to dembx only
    % For calls to dembx after the first, we want to continue using the
    % value of h determined in the previous call. Of course, if npoints is
    % greater than 1, this initialization step will be run for every new
    % microstructure used, as kkk is reset to 1 every time the counter micro
    % is increased.

    if kkk == 1
       h = gb; 
    end

    % Lstep counts the number of conjugate gradient steps taken in
    % each call to dembx
    Lstep = 0;
    for ijk=1:ldemb
        Lstep = Lstep + 1;
        Ah = zeros(ns, 3);

        % Do global matrix multiply via small stiffness matrices, Ah = A * h
        % The long statement below correctly brings in all the terms from
        % the global matrix A using only the small stiffness matrices dk.

        for j=1:3
            for n=1:3
                for m=1:ns
                Ah(m,j)=Ah(m,j)+h(ib(m,1),n)*( dk(pix(ib(m,27)),1,j,4,n)...
                +dk(pix(ib(m,7)),2,j,3,n)...
                +dk(pix(ib(m,25)),5,j,8,n)+dk(pix(ib(m,15)),6,j,7,n) )+...
                h(ib(m,2),n)*( dk(pix(ib(m,27)),1,j,3,n)...
                +dk(pix(ib(m,25)),5,j,7,n) )+...
                h(ib(m,3),n)*( dk(pix(ib(m,27)),1,j,2,n)+dk(pix(ib(m,5)),4,j,3,n)+...
                dk(pix(ib(m,13)),8,j,7,n)+dk(pix(ib(m,25)),5,j,6,n) )+...
                h(ib(m,4),n)*( dk(pix(ib(m,5)),4,j,2,n)...
                +dk(pix(ib(m,13)),8,j,6,n) )+...
                h(ib(m,5),n)*( dk(pix(ib(m,6)),3,j,2,n)+dk(pix(ib(m,5)),4,j,1,n)+...
                dk(pix(ib(m,14)),7,j,6,n)+dk(pix(ib(m,13)),8,j,5,n) )+...
                h(ib(m,6),n)*( dk(pix(ib(m,6)),3,j,1,n)...
                +dk(pix(ib(m,14)),7,j,5,n) )+...
                h(ib(m,7),n)*( dk(pix(ib(m,6)),3,j,4,n)+dk(pix(ib(m,7)),2,j,1,n)+...
                dk(pix(ib(m,14)),7,j,8,n)+dk(pix(ib(m,15)),6,j,5,n) )+...
                h(ib(m,8),n)*( dk(pix(ib(m,7)),2,j,4,n)...
                +dk(pix(ib(m,15)),6,j,8,n) )+...
                h(ib(m,9),n)*( dk(pix(ib(m,25)),5,j,4,n)...
                +dk(pix(ib(m,15)),6,j,3,n) )+...
                h(ib(m,10),n)*( dk(pix(ib(m,25)),5,j,3,n) )+...
                h(ib(m,11),n)*( dk(pix(ib(m,13)),8,j,3,n)...
                +dk(pix(ib(m,25)),5,j,2,n) )+...
                h(ib(m,12),n)*( dk(pix(ib(m,13)),8,j,2,n) )+...
                h(ib(m,13),n)*( dk(pix(ib(m,13)),8,j,1,n)...
                +dk(pix(ib(m,14)),7,j,2,n) )+...
                h(ib(m,14),n)*( dk(pix(ib(m,14)),7,j,1,n) )+...
                h(ib(m,15),n)*( dk(pix(ib(m,14)),7,j,4,n)...
                +dk(pix(ib(m,15)),6,j,1,n) )+...
                h(ib(m,16),n)*( dk(pix(ib(m,15)),6,j,4,n) )+...
                h(ib(m,17),n)*( dk(pix(ib(m,27)),1,j,8,n)...
                +dk(pix(ib(m,7)),2,j,7,n) )+...
                h(ib(m,18),n)*( dk(pix(ib(m,27)),1,j,7,n) )+...
                h(ib(m,19),n)*( dk(pix(ib(m,27)),1,j,6,n)...
                +dk(pix(ib(m,5)),4,j,7,n) )+...
                h(ib(m,20),n)*( dk(pix(ib(m,5)),4,j,6,n) )+...
                h(ib(m,21),n)*( dk(pix(ib(m,5)),4,j,5,n)...
                +dk(pix(ib(m,6)),3,j,6,n) )+...
                h(ib(m,22),n)*( dk(pix(ib(m,6)),3,j,5,n) )+...
                h(ib(m,23),n)*( dk(pix(ib(m,6)),3,j,8,n)...
                +dk(pix(ib(m,7)),2,j,5,n) )+...
                h(ib(m,24),n)*( dk(pix(ib(m,7)),2,j,8,n) )+...
                h(ib(m,25),n)*( dk(pix(ib(m,14)),7,j,3,n)...
                +dk(pix(ib(m,13)),8,j,4,n)+...
                dk(pix(ib(m,15)),6,j,2,n)+dk(pix(ib(m,25)),5,j,1,n) )+...
                h(ib(m,26),n)*( dk(pix(ib(m,6)),3,j,7,n)...
                +dk(pix(ib(m,5)),4,j,8,n)+...
                dk(pix(ib(m,27)),1,j,5,n)+dk(pix(ib(m,7)),2,j,6,n) )+...
                h(ib(m,27),n)*( dk(pix(ib(m,27)),1,j,1,n)...
                +dk(pix(ib(m,7)),2,j,2,n)+...
                dk(pix(ib(m,6)),3,j,3,n)+dk(pix(ib(m,5)),4,j,4,n)...
                +dk(pix(ib(m,25)),5,j,5,n)+...
                dk(pix(ib(m,15)),6,j,6,n)+dk(pix(ib(m,14)),7,j,7,n)+...
                dk(pix(ib(m,13)),8,j,8,n) );
                end
            end
        end

        hAh=0.0;

        for m3=1:3
            for m=1:ns
                hAh=hAh+h(m,m3)*Ah(m,m3);
            end
        end

        lambda=gg/hAh;
        for m3=1:3
            for m=1:ns
                u(m,m3)=u(m,m3)-lambda*h(m,m3);
                gb(m,m3)=gb(m,m3)-lambda*Ah(m,m3);
            end
        end
        gglast=gg;
        gg=0.0;

        for m3=1:3
            for m=1:ns
                gg=gg+gb(m,m3)*gb(m,m3);
            end
        end

        if(gg<gtest) 
            break;
        end

        gamma=gg/gglast;
        for m3=1:3
            for m=1:ns
                h(m,m3)=gb(m,m3)+gamma*h(m,m3);
            end
        end
    end

end


